
resource "aws_lb" "my_load_balancer" {
  name               = "my-load-balancer"
  internal           = false
  load_balancer_type = "application"
  subnets            = [aws_subnet.subnet1.id, aws_subnet.subnet2.id]
  security_groups    = [aws_security_group.elb_sg.id]
  ip_address_type    = "ipv4"
  tags = {
    Name = "my-load-balancer"
  }
}

resource "aws_lb_listener" "my_listener" {
  load_balancer_arn = aws_lb.my_load_balancer.arn
  port              = 80
  protocol          = "HTTP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.my_target_group.arn
  }
}
resource "aws_security_group" "elb_sg" {
  name        = "allow_http_elb"
  description = "Allow http inbound traffic for elb"
  vpc_id      = aws_vpc.myvpc.id

  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name = "terraform-elb-security-group"
  }
}

resource "aws_lb_target_group" "my_target_group" {
  name                          = "my-target-group"
  port                          = 80
  protocol                      = "HTTP"
  vpc_id                        = aws_vpc.myvpc.id
  load_balancing_algorithm_type = "least_outstanding_requests"

  health_check {
    enabled             = true
    path                = "/"
    interval            = 10
    protocol            = "HTTP"
    timeout             = 5
    port                = "80"
    healthy_threshold   = 10
    unhealthy_threshold = 10
    matcher             = "200"

  }
  depends_on = [
    aws_lb.my_load_balancer
  ]
  lifecycle {
    create_before_destroy = true
  }
}

resource "aws_lb_target_group_attachment" "my_target_group_attachment1" {
  target_group_arn = aws_lb_target_group.my_target_group.arn
  target_id        = aws_instance.instance1.id
  port             = 80
}
resource "aws_lb_target_group_attachment" "my_target_group_attachment2" {
  target_group_arn = aws_lb_target_group.my_target_group.arn
  target_id        = aws_instance.instance2.id
  port             = 80
}
